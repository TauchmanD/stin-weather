name: Django CI

on:
  push:
    branches:
      - 'feature/**'
      - 'master'
      - 'dev'


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]

    env:
      CURRENT_WEATHER_API_URL: ${{ vars.CURRENT_WEATHER_API_URL }}
      WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DEFAULT_CITY: ${{ vars.DEFAULT_CITY }}
      FORECAST_API_URL: ${{ vars.FORECAST_API_URL }}
      HISTORY_API_URL: ${{ vars.HISTORY_API_URL }}
      USER_API_KEY: ${{ vars.USER_API_KEY }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Collect static files
      run: |
        python manage.py collectstatic --no-input
    - name: Run Tests
      run: |
        coverage run -m pytest
      env:
        CURRENT_WEATHER_API_URL: ${{ vars.CURRENT_WEATHER_API_URL }}
        WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        DEFAULT_CITY: ${{ vars.DEFAULT_CITY }}
        FORECAST_API_URL: ${{ vars.FORECAST_API_URL }}
        HISTORY_API_URL: ${{ vars.HISTORY_API_URL }}
        USER_API_KEY: ${{ vars.USER_API_KEY }}
    - name: Coverage
      run: |
        coverage report -m
